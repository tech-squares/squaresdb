import json
import os
from pathlib import Path

SETTINGS_DIR = Path(__file__).resolve().parent

SECRET_KEY = open(SETTINGS_DIR / 'django_secret_key.txt').read().strip()

# Load Google OAuth2 secrets
google_oauth = json.load(open(SETTINGS_DIR / 'google-oauth.json'))
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY =google_oauth['web']['client_id']
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = google_oauth['web']['client_secret']

SITE_SERVER = "https://{{extname}}"
ALLOWED_HOSTS = ['{{extname}}', {%for name in vhost_aliases%}'{{name}}', {%endfor%}]

CSRF_COOKIE_SECURE = False
SESSION_COOKIE_SECURE = False

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'squaresdb.utils.email.AutoBccEmailBackend'

STATIC_ROOT = '/var/www/squaresdb/static'

CYBERSOURCE_CONFIG_NAME = '{{cybersource}}'

{% if enable_logging %}
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'default': {
            'format': '%(asctime)s %(levelname)-8s %(name)-15s %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'default',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
        },
        'squaresdb': {
            'handlers': ['console'],
            'level': os.getenv('SQUARESDB_LOG_LEVEL', 'INFO'),
        },
    },
}
{% else %}
# Custom logging not enabled
{% endif %}

{% if dbtype == "mysql" %}
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'squaresdb',
        'USER': 'squaresdb',
    }
}
{% else %}
# No custom DB setup for dbtype={{dbtype}}
{% endif %}
